{"version":3,"sources":["src/app/pages/Orders/AllOrders/AllOrders.component.html","src/app/pages/Orders/OrderStatus/OrderStatus.component.html","src/app/pages/Orders/Orders.component.html","src/app/pages/Orders/PosOrder/PosOrder.component.html","src/app/_service/order.service.ts","src/app/pages/Orders/AllOrders/AllOrders.component.scss","src/app/pages/Orders/AllOrders/AllOrders.component.ts","src/app/pages/Orders/OrderRouting.routing.ts","src/app/pages/Orders/OrderStatus/OrderStatus.component.scss","src/app/pages/Orders/OrderStatus/OrderStatus.component.ts","src/app/pages/Orders/Orders.component.scss","src/app/pages/Orders/Orders.component.ts","src/app/pages/Orders/Orders.module.ts","src/app/pages/Orders/PosOrder/PosOrder.component.scss","src/app/pages/Orders/PosOrder/PosOrder.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n<!-- Hover table card start -->\\r\\n<app-card [title]=\\\"'Orders'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\r\\n  <span class=\\\"code-header\\\">All Orders Detail</span>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\" >\\r\\n     \\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\" >\\r\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;padding-bottom: 8px;\\\">\\r\\n        <select class=\\\"custom-select\\\"#mySelect\\r\\n        (change)='onOptionsSelected(mySelect.value)' >\\r\\n          <option selected value=\\\"0\\\">All</option>\\r\\n         <option value=\\\"1\\\">Pending</option>\\r\\n         <option value=\\\"2\\\">Active</option>\\r\\n         <option value=\\\"3\\\">Completed</option>\\r\\n         <option value=\\\"4\\\">Cancelled</option>\\r\\n    \\r\\n        </select>\\r\\n        </div>\\r\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vendorname\\\" (ngModelChange)=\\\"SearchRider()\\\" placeholder=\\\"Enter Name to search\\\" >\\r\\n           \\r\\n         \\r\\n     </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('code')\\\">Order No.<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('storename')\\\">Vendor<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('createDate')\\\">Date<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('status')\\\">Status<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('delivertDate')\\\">Delivering Date<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('billinginfo.subtotal')\\\">Sub Total<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('billinginfo.discounted_Amount')\\\">Discount<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n\\r\\n      <th (click)=\\\"Sort('billinginfo.grandTotal')\\\">Grand Total<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n      <th (click)=\\\"Sort('Action')\\\">Action<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n      <!-- <th>Image</th> -->\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let obj of SearchOrdersList | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\r\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\r\\n        <td>{{obj.code}}</td>\\r\\n        <td>{{obj.storename}}</td>\\r\\n        <td>{{obj.createDate| date:'medium'}}</td>\\r\\n        <td>{{obj.status}}</td>\\r\\n      \\r\\n        <td>{{obj.delivertDate | date:'medium'}}</td>\\r\\n        <td>{{obj.billinginfo?.subtotal}}</td>\\r\\n        <td>{{obj.billinginfo?.discounted_Amount}}</td>\\r\\n        <td>{{obj.billinginfo?.grandTotal}}</td>\\r\\n    \\r\\n       <td>  <div class=\\\"row\\\">\\r\\n\\r\\n        <div style=\\\"padding: 4px;\\\">\\r\\n          <i class=\\\"fa fa-desktop\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\"  (click)=\\\"openOrderDetailLg(OrderDetailcontent,obj.orderId)\\\" ></i> \\r\\n        </div>\\r\\n        <div style=\\\"padding: 4px;\\\"*ngIf=\\\"obj.status!='Completed'\\\">\\r\\n          <i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(113, 147, 240)\\\"  (click)=\\\"openOrderUpdateLg(EditStatuscontent,obj.orderId)\\\" ></i> \\r\\n        </div>\\r\\n    </div></td>\\r\\n      </tr>\\r\\n     \\r\\n      </tbody>\\r\\n    \\r\\n    </table>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div style=\\\"right: 10%;\\\">\\r\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</app-card>\\r\\n<!-- Hover table card end -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #OrderDetailcontent let-modal>\\r\\n      \\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Order Detail</h4>\\r\\n      \\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n           <tr>\\r\\n             <th>Product Name</th>\\r\\n             <th>Barcode</th>\\r\\n             <th>Qty</th>\\r\\n             <th>Unit Price</th>\\r\\n             <th>Total price</th>\\r\\n           </tr>\\r\\n      </thead>\\r\\n      <tbody *ngFor=\\\"let obj of orderitemns\\\">\\r\\n        <tr>\\r\\n          <th>{{obj?.productName}}</th>\\r\\n          <th>{{obj?.barcode}}</th>\\r\\n          <th>{{obj?.qty}}</th>\\r\\n          <th>{{obj?.price}}</th>\\r\\n          <th>{{obj?.totalprice}}</th>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n           </div>\\r\\n    \\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n  \\r\\n  \\r\\n    <ng-template #EditStatuscontent let-modal>\\r\\n      \\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Order Detail</h4>\\r\\n      \\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"container\\\">\\r\\n          <form [formGroup]=\\\"orderstatus\\\" >\\r\\n      <input type=\\\"hidden\\\" formControlName=\\\"orderId\\\"/>\\r\\n            <label>Select Status</label>\\r\\n            <select class=\\\"custom-select custom-select-lg sm-1\\\"formControlName=\\\"status\\\"\\r\\n            (change)='onOptionsOrderStatusSelected()'>\\r\\n             \\r\\n              <!-- <option value=\\\"Pending\\\" *ngIf=\\\"ordercurrentstatus==''\\\">Pending</option> -->\\r\\n              <option value=\\\"Active\\\"*ngIf=\\\"ordercurrentstatus=='Pending'\\\" >Active</option>\\r\\n              <option value=\\\"Completed\\\"*ngIf=\\\"ordercurrentstatus=='Active'\\\">Completed</option>\\r\\n              \\r\\n  \\r\\n            </select>\\r\\n      \\r\\n             \\r\\n          </form>\\r\\n      </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\r\\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\r\\n      </ngx-spinner> \\r\\n  \\r\\n  \\r\\n\"","export default \"<p>\\r\\n  OrderStatus works!\\r\\n</p>\\r\\n\"","export default \"<p>\\r\\n  Orders works!\\r\\n</p>\\r\\n\"","export default \"\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n<!-- Hover table card start -->\\r\\n<app-card [title]=\\\"'Orders'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\r\\n  <span class=\\\"code-header\\\">All POS Orders Detail </span>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\" >\\r\\n     \\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\" >\\r\\n      \\r\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ordercode\\\" (ngModelChange)=\\\"SearchRider()\\\" placeholder=\\\"Enter Order No. to search\\\" >\\r\\n           \\r\\n         \\r\\n     </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('orderId')\\\">Order No.<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n    \\r\\n        <th (click)=\\\"Sort('billinginfo.percentageDiscount')\\\">Date<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('billinginfo.subtotal')\\\">Sub Total<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('billinginfo.subtotal')\\\">Discount<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n\\r\\n      <th (click)=\\\"Sort('billinginfo.grandTotal')\\\">Grand Total<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n      <th (click)=\\\"Sort('Action')\\\">Action<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n      <!-- <th>Image</th> -->\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let obj of SearchOrdersList | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\r\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\r\\n        <td>{{obj.ordercode}}</td>\\r\\n     \\r\\n        <td>{{obj.date}}</td>\\r\\n       \\r\\n      \\r\\n     \\r\\n        <td>{{obj.billinginfo?.subtotal}}</td>\\r\\n        <td>{{obj.billinginfo?.discounted_Amount}}</td>\\r\\n        <td>{{obj.billinginfo?.grandTotal}}</td>\\r\\n    \\r\\n       <td>  <div class=\\\"row\\\">\\r\\n\\r\\n        <div style=\\\"padding: 4px;\\\">\\r\\n          <i class=\\\"fa fa-desktop\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\"  (click)=\\\"openOrderDetailLg(OrderDetailcontent,obj.orderId)\\\" ></i> \\r\\n        </div>\\r\\n        <!-- <div style=\\\"padding: 4px;\\\">\\r\\n          <i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(113, 147, 240)\\\"  (click)=\\\"openOrderUpdateLg(EditStatuscontent,obj.orderId)\\\" ></i> \\r\\n        </div> -->\\r\\n    </div></td>\\r\\n      </tr>\\r\\n     \\r\\n      </tbody>\\r\\n    \\r\\n    </table>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div style=\\\"right: 10%;\\\">\\r\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</app-card>\\r\\n<!-- Hover table card end -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #OrderDetailcontent let-modal>\\r\\n      \\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Order Detail</h4>\\r\\n      \\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n           <tr>\\r\\n             <th>Product Name</th>\\r\\n             <th>Barcode</th>\\r\\n             <th>Qty</th>\\r\\n             <th>Unit Price</th>\\r\\n             <th>Total price</th>\\r\\n           </tr>\\r\\n      </thead>\\r\\n      <tbody *ngFor=\\\"let obj of orderitemns\\\">\\r\\n        <tr>\\r\\n          <th>{{obj?.productName}}</th>\\r\\n          <th>{{obj?.barcode}}</th>\\r\\n          <th>{{obj?.qty}}</th>\\r\\n          <th>{{obj?.price}}</th>\\r\\n          <th>{{obj?.totalprice}}</th>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n           </div>\\r\\n    \\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\r\\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\r\\n      </ngx-spinner> \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n\"","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class OrderService {\r\n  \r\n  baseUrl = environment.apiurl + 'OrderApi/';\r\n  baseUrl2 = environment.apiurl + 'PosOrder/';\r\nconstructor(private http: HttpClient) { }\r\nGetOrders(){\r\n  return this.http.get<any>(this.baseUrl+'GetAllOrders',httpOptions)\r\n};\r\nGetPosOrders(){\r\n  return this.http.get<any>(this.baseUrl2+'GetPosOrders',httpOptions)\r\n};\r\nUpdateOrderStatus(form:any){\r\n  return this.http.post<any>(this.baseUrl+'OrderStatus',form)\r\n};\r\n};\r\nvar headers_object = new HttpHeaders({\r\n  'Content-Type': 'application/json',\r\n   'Authorization': \"Bearer \"+localStorage.getItem('token')\r\n});\r\nconst httpOptions = {\r\n  headers: headers_object\r\n};","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9BbGxPcmRlcnMvQWxsT3JkZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { OrderDto } from './../../../../../src/app/Models/OrderDto.Model';\r\nimport { OrderService } from '../../../../../src/app/_service/order.service';\r\nimport { items } from './../../../../../src/app/Models/items.Model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-AllOrders',\r\n  templateUrl: './AllOrders.component.html',\r\n  styleUrls: ['./AllOrders.component.scss']\r\n})\r\nexport class AllOrdersComponent implements OnInit {\r\n  OrdersList:OrderDto[];\r\n  SearchOrdersList:OrderDto[];\r\n  key:string='rowid';\r\n  reverse:boolean=false;\r\n  p:number=1;\r\n  form: FormGroup;\r\n  orderid:number;\r\n  orderitemns:items[];\r\n  neworderdata:any;\r\n  vendorname:string;\r\n  statusorderid:number;\r\n  status:string;\r\n  ordercurrentstatus:string;\r\n  ss:boolean=false;\r\n  orderstatus:FormGroup=new FormGroup({\r\n    orderId:new FormControl(''),\r\n    status: new FormControl('')\r\n  \r\n   });\r\n  constructor(private SpinnerService: NgxSpinnerService,private orderservice:OrderService,private modalService: NgbModal,) { }\r\n\r\n  ngOnInit() {\r\n   \r\n    this.GetOrders();\r\n \r\n  \r\n  }\r\n  openOrderDetailLg(content,id:number) {\r\n    debugger;\r\n    var data=this.OrdersList.find(res=>res.orderId==id);\r\n    this.orderitemns=data.items;\r\n    \r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n  openOrderUpdateLg(content,id:number) {\r\n    debugger;\r\n   this.statusorderid=id;\r\n    var dd=this.SearchOrdersList.filter(x=>x.orderId==id);\r\n    this.ordercurrentstatus=dd[0].status;\r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n  onOptionsOrderStatusSelected(){\r\n\r\n    ((this.orderstatus.get('orderId').patchValue(this.statusorderid)));\r\n    this.orderservice.UpdateOrderStatus(this.orderstatus.value).subscribe((next:any) => {\r\n     this.OrdersList.forEach(x=>{if(x.orderId==this.statusorderid){x.status=this.orderstatus.value.status}})\r\n      this.modalService.dismissAll();\r\n      this.orderstatus.reset();\r\n\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n    \r\n  }\r\n  onOptionsSelected(num){\r\n    debugger;\r\n    if(num==\"0\"){\r\n      this.SearchOrdersList=this.OrdersList;\r\n    }\r\n    if(num==\"1\"){\r\n      this.status=\"Pending\";\r\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\r\n    }\r\n    if(num==\"2\"){\r\n      this.status=\"Active\";\r\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\r\n    }\r\n    if(num==\"3\"){\r\n      this.status=\"Completed\";\r\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\r\n    }\r\n    if(num==\"4\"){\r\n      this.status=\"Cancelled\";\r\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\r\n    }\r\n\r\n  }\r\n  SearchRider(){\r\n    if(this.vendorname==\"\"){\r\n      this.SearchOrdersList=this.OrdersList\r\n     }\r\n     else{\r\n       if(this.OrdersList!=null){\r\n         this.SearchOrdersList=this.OrdersList.filter(res=>{\r\n           return res.vendorname.match(this.vendorname)\r\n         })\r\n       }\r\n    \r\n     }\r\n  }\r\n  GetOrders(){\r\n    this.SpinnerService.show();\r\n    this.orderservice.GetOrders().subscribe((next:any) => {\r\n      this.OrdersList=[];\r\n      this.OrdersList=next.res;console.log(next.res);\r\n      this.SearchOrdersList=this.OrdersList;\r\n      this.SpinnerService.hide();\r\n      console.log(this.OrdersList)\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n \r\n  }\r\n\r\n  Sort(key){\r\n    this.key=key;\r\n    this.reverse=!this.reverse;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllOrdersComponent } from './AllOrders/AllOrders.component';\r\nimport { PosOrderComponent } from './PosOrder/PosOrder.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AllOrdersComponent,\r\n    data: {\r\n      breadcrumb: ' Orders',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: 'All Orders',\r\n      status: true\r\n    }\r\n  },\r\n  {\r\n    path: 'posorders',\r\n    component: PosOrderComponent,\r\n    data: {\r\n      breadcrumb: 'Pos Orders',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: 'All Pos Orders Detail',\r\n      status: true\r\n    }\r\n  },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrderRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9PcmRlclN0YXR1cy9PcmRlclN0YXR1cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-OrderStatus',\r\n  templateUrl: './OrderStatus.component.html',\r\n  styleUrls: ['./OrderStatus.component.scss']\r\n})\r\nexport class OrderStatusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9PcmRlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-Orders',\r\n  templateUrl: './Orders.component.html',\r\n  styleUrls: ['./Orders.component.scss']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OrdersComponent } from './Orders.component';\r\nimport { AllOrdersComponent } from './AllOrders/AllOrders.component';\r\nimport { OrderStatusComponent } from './OrderStatus/OrderStatus.component';\r\nimport { OrderRoutingModule } from './OrderRouting.routing';\r\nimport { SharedModule } from '../../../../src/app/shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { PosOrderComponent } from './PosOrder/PosOrder.component';\r\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OrderRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxDropzoneModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [OrdersComponent,AllOrdersComponent,OrderStatusComponent,PosOrderComponent],\r\n  providers: [\r\n    NgxSpinnerService\r\n    ]\r\n})\r\nexport class OrdersModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9Qb3NPcmRlci9Qb3NPcmRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { OrderDto } from '../../../Models/OrderDto.Model';\r\nimport { OrderService } from '../../../_service/order.service';\r\nimport { items } from '../../../Models/items.Model';\r\nimport { PosServiceService } from '../../../_service/PosService.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n@Component({\r\n  selector: 'app-PosOrder',\r\n  templateUrl: './PosOrder.component.html',\r\n  styleUrls: ['./PosOrder.component.scss']\r\n})\r\nexport class PosOrderComponent implements OnInit {\r\n\r\n  OrdersList:OrderDto[];\r\n  SearchOrdersList:OrderDto[];\r\n  key:string='rowid';\r\n  reverse:boolean=false;\r\n  p:number=1;\r\n  form: FormGroup;\r\n  orderid:number;\r\n  orderitemns:items[];\r\n  neworderdata:any;\r\n  ordercode:string;\r\n  statusorderid:number;\r\n  status:string;\r\n  ss:boolean=false;\r\n \r\n  constructor(private SpinnerService: NgxSpinnerService,private orderservice:PosServiceService,private modalService: NgbModal,private posorderservice:OrderService) { }\r\n\r\n  ngOnInit() {\r\n    this.GetOrders();\r\n  \r\n  }\r\n  openOrderDetailLg(content,id:number) {\r\n    debugger;\r\n    var data=this.OrdersList.find(res=>res.orderId==id);\r\n    this.orderitemns=data.items;\r\n    \r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n  openOrderUpdateLg(content,id:number) {\r\n    debugger;\r\n   this.statusorderid=id;\r\n    \r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n \r\n \r\n  SearchRider(){\r\n    debugger;\r\n    if(this.ordercode==\"\"){\r\n      this.SearchOrdersList=this.OrdersList\r\n     }\r\n     else{\r\n       if(this.OrdersList!=null){\r\n         this.SearchOrdersList=this.OrdersList.filter(res=>{\r\n           return res.ordercode.toLocaleLowerCase().match(this.ordercode.toLocaleLowerCase())\r\n         })\r\n       }\r\n    \r\n     }\r\n  }\r\n  GetOrders(){\r\n    this.SpinnerService.show();\r\n    this.posorderservice.GetPosOrders().subscribe((next:any) => {\r\n      this.OrdersList=[];\r\n      this.OrdersList=next.res;\r\n      this.SpinnerService.hide();\r\n      this.SearchOrdersList=this.OrdersList;\r\n    \r\n      console.log(this.OrdersList)\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  Sort(key){\r\n    this.key=key;\r\n    this.reverse=!this.reverse;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"pages-Orders-Orders-module-es5.js"}