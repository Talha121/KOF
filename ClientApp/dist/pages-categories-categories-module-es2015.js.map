{"version":3,"sources":["./src/app/pages/categories/Allcategories/Allcategories.component.html","./src/app/pages/categories/categories.component.html","./src/app/Models/Category.ts","./src/app/pages/categories/Allcategories/Allcategories.component.scss","./src/app/pages/categories/Allcategories/Allcategories.component.ts","./src/app/pages/categories/categories.component.scss","./src/app/pages/categories/categories.component.ts","./src/app/pages/categories/categories.module.ts","./src/app/pages/categories/categoryrouting.routing.ts"],"names":[],"mappings":"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","file":"pages-categories-categories-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <!-- Hover table card start -->\\r\\n    <app-card\\r\\n      [title]=\\\"'Categories'\\\"\\r\\n      [classHeader]=\\\"true\\\"\\r\\n      [blockClass]=\\\"'table-border-style'\\\"\\r\\n    >\\r\\n      <span class=\\\"code-header\\\">All Categories Detail</span>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"!showform\\\">\\r\\n        <div class=\\\"col-sm-10\\\">\\r\\n          <button\\r\\n            class=\\\"btn btn-success pull-right\\\"\\r\\n            (click)=\\\"createCategory(categoryModal)\\\"\\r\\n          >\\r\\n            Add Category\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      <div class=\\\"table-responsive\\\" style=\\\"padding: 2%\\\">\\r\\n        <table class=\\\"table table-hover\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n              <th (click)=\\\"Sort('name')\\\">\\r\\n                Category Name<i class=\\\"fa fa-sort\\\"></i>\\r\\n              </th>\\r\\n              <th (click)=\\\"Sort('status')\\\">\\r\\n                Status<i class=\\\"fa fa-sort\\\"></i>\\r\\n              </th>\\r\\n              \\r\\n              <th (click)=\\\"Sort('id')\\\">\\r\\n                Image<i class=\\\"fa fa-sort\\\"></i>\\r\\n              </th>\\r\\n              <th (click)=\\\"Sort('description')\\\">\\r\\n                Actions<i class=\\\"fa fa-sort\\\"></i>\\r\\n              </th>\\r\\n              <!-- <th>Image</th> -->\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr\\r\\n              *ngFor=\\\"\\r\\n                let obj of CategoriesList\\r\\n                  | orderBy: key:reverse\\r\\n                  | paginate: { itemsPerPage: 10, currentPage: p };\\r\\n                let i = index\\r\\n              \\\"\\r\\n            >\\r\\n              <td style=\\\"width: 2px\\\">{{ i + 1 }}</td>\\r\\n              <td>{{ obj.name }}</td>\\r\\n              <td>{{ obj.status }}</td>\\r\\n              <td *ngIf=\\\"obj.imageUrl != noimage; else nImage\\\">\\r\\n                <img\\r\\n                  [src]=\\\"ImagebaseUrl+obj.imageUrl\\\"\\r\\n                  style=\\\"height: 40px\\\"\\r\\n                />\\r\\n              </td>\\r\\n              <ng-template #nImage>\\r\\n                <td>No Image</td>\\r\\n              </ng-template>\\r\\n              <td>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <!-- <div style=\\\"padding: 4px\\\">\\r\\n                    <i\\r\\n                      class=\\\"fa fa-upload\\\"\\r\\n                      aria-hidden=\\\"true\\\"\\r\\n                      style=\\\"font-size: 18px; color: rgb(255, 0, 0)\\\"\\r\\n                      title=\\\"Upload Image\\\"\\r\\n                      (click)=\\\"openLg(uploadfilecontent, obj.category_Id)\\\"\\r\\n                    ></i>\\r\\n                  </div> -->\\r\\n                  <div style=\\\"padding: 4px\\\">\\r\\n                    <i\\r\\n                      class=\\\"fa fa-edit\\\"\\r\\n                      style=\\\"font-size: 18px; color: rgb(0, 195, 255)\\\"\\r\\n                      (click)=\\\"UpdateView(categoryModal, obj.id)\\\"\\r\\n                    ></i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div style=\\\"right: 10%\\\">\\r\\n            <pagination-controls\\r\\n              (pageChange)=\\\"p = $event\\\"\\r\\n            ></pagination-controls>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </app-card>\\r\\n    <!-- Hover table card end -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ngx-spinner\\r\\n  bdColor=\\\"rgba(51, 51, 51, 0.8)\\\"\\r\\n  size=\\\"default\\\"\\r\\n  type=\\\"ball-spin-clockwise\\\"\\r\\n>\\r\\n  <p style=\\\"color: white\\\">Please Wait.</p>\\r\\n</ngx-spinner>\\r\\n\\r\\n<ng-template #categoryModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{ modalContent }} Category</h4>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"CategoryForm\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"col-md-5 mb-3\\\">\\r\\n          <label for=\\\"validationCustom01\\\">Category Name</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"validationCustom01\\\"\\r\\n            placeholder=\\\"Category Name\\\"\\r\\n            formControlName=\\\"name\\\"\\r\\n            required\\r\\n          />\\r\\n        </div>\\r\\n        <div class=\\\"col-md-5 mb-3\\\">\\r\\n          <label for=\\\"validationCustom01\\\">Category Image</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"file\\\"  (change)=\\\"uploadFile($event)\\\" required />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button\\r\\n    style=\\\"float: right\\\"\\r\\n    class=\\\"btn btn-primary\\\"\\r\\n    (click)=\\\"submit()\\\"\\r\\n    type=\\\"submit\\\"\\r\\n  >\\r\\n    Submit\\r\\n  </button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-light\\\"\\r\\n      (click)=\\\"modal.close('Close click')\\\"\\r\\n    >\\r\\n      Close\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","export default \"<p>\\r\\n  categories works!\\r\\n</p>\\r\\n\"","export class Category {\r\n  id: number;\r\n  imageUrl: string;\r\n  name: string;\r\n  status: boolean;\r\n  createdBy:string;\r\n  createdOn:Date\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhdGVnb3JpZXMvQWxsY2F0ZWdvcmllcy9BbGxjYXRlZ29yaWVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { HttpEvent, HttpEventType } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormControl, FormGroup } from \"@angular/forms\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { environment } from \"./../../../../../src/environments/environment.prod\";\r\nimport { FileuploadService } from \"../../../../../src/app/_service/fileupload.service\";\r\nimport { ProductService } from \"../../../../../src/app/_service/product.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Category } from \"../../../../../src/app/Models/Category\";\r\nimport { AlertifyService } from \"../../../../../src/app/_service/alertify.service\";\r\n\r\n@Component({\r\n  selector: \"app-Allcategories\",\r\n  templateUrl: \"./Allcategories.component.html\",\r\n  styleUrls: [\"./Allcategories.component.scss\"],\r\n})\r\nexport class AllcategoriesComponent implements OnInit {\r\n  form: FormGroup;\r\n  ImagebaseUrl = environment.Imagebaseurl + \"Images/CategoryImages/\";\r\n  CategoriesList: any;\r\n  key: string = \"rowid\";\r\n  reverse: boolean = false;\r\n  p: number = 1;\r\n  categotyid: number;\r\n  noimage = \"\";\r\n  showform: boolean = false;\r\n  Singlecategory: Category;\r\n  progress: number = 0;\r\n  modalContent: string = \"\";\r\n  constructor(\r\n    private categorymodel: Category,\r\n    private alertify: AlertifyService,\r\n    private SpinnerService: NgxSpinnerService,\r\n    private productservice: ProductService,\r\n    private modalService: NgbModal,\r\n    private uploadfileservice: FileuploadService,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.SpinnerService.show();\r\n    this.Getcategorey();\r\n    this.form = this.fb.group({\r\n      avatar: [null],\r\n    });\r\n    this.SpinnerService.hide();\r\n  }\r\n  showinput() {\r\n    this.showform = true;\r\n  }\r\n  CategoryForm: FormGroup = new FormGroup({\r\n    name: new FormControl(this.categorymodel.name),\r\n    id: new FormControl(),\r\n    status: new FormControl(true),\r\n    image: new FormControl(null),\r\n  });\r\n  AddCategory() {\r\n    debugger;\r\n    let data= this.CategoryForm.value;\r\n    var formData: any = new FormData();\r\n    formData.append(\"Name\", data.name);\r\n    formData.append(\"image\", data.image);\r\n    this.productservice.Addcateogry(formData).subscribe(\r\n      (next) => {\r\n        this.modalService.dismissAll();\r\n        this.CategoryForm.reset();\r\n        this.Getcategorey();\r\n        this.alertify.success(\"Category Created successfully\");\r\n      },\r\n      (error) => {\r\n        this.alertify.error(\"already exists\");\r\n        console.log(error);\r\n      }\r\n    );\r\n    console.log(this.CategoryForm.value);\r\n  }\r\n  UpdateCategory() {\r\n    debugger;\r\n    let data= this.CategoryForm.value;\r\n    var formData: any = new FormData();\r\n    formData.append(\"Id\",data.id);\r\n    formData.append(\"Name\", data.name);\r\n    formData.append(\"image\", data.image);\r\n    this.productservice.UpdateCategory(formData).subscribe(\r\n      (next) => {\r\n        this.modalService.dismissAll();\r\n        this.CategoryForm.reset();\r\n        this.Getcategorey();\r\n        this.alertify.success(\"Category Updated seccussfully\");\r\n      },\r\n      (error) => {\r\n        this.modalService.dismissAll();\r\n        this.CategoryForm.reset();\r\n        this.alertify.success(\"Category Updated seccussfully\");\r\n        console.log(error);\r\n      }\r\n    );\r\n    console.log(this.CategoryForm.value);\r\n  }\r\n\r\n  Getcategorey() {\r\n    this.SpinnerService.show();\r\n    this.productservice.GetCategorey().subscribe(\r\n      (response: any) => {\r\n        debugger;\r\n        this.CategoriesList = [];\r\n        this.CategoriesList = response;\r\n\r\n        console.log(this.CategoriesList);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    this.SpinnerService.hide();\r\n  }\r\n  Sort(key) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  openLg(content, id: number) {\r\n    this.categotyid = id;\r\n\r\n    this.modalService.open(content, { size: \"lg\" });\r\n  }\r\n\r\n  UpdateView(content, id: number) {\r\n    debugger\r\n    this.modalContent = \"Update\";\r\n    var data = this.CategoriesList.find((res) => res.id == id);\r\n    debugger;\r\n    this.Singlecategory = data;\r\n    this.CategoryForm.patchValue({\r\n      id: this.Singlecategory.id,\r\n      name: this.Singlecategory.name,\r\n      status: this.Singlecategory.status,\r\n    });\r\n\r\n    this.modalService.open(content, { size: \"lg\" });\r\n  }\r\n  createCategory(content) {\r\n    this.modalContent = \"Create\";\r\n    this.CategoryForm.reset();\r\n    this.modalService.open(content, { size: \"lg\" });\r\n  }\r\n  uploadFile(event) {\r\n    debugger;\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.CategoryForm.get(\"image\").patchValue(file);\r\n    this.CategoryForm.get(\"image\").updateValueAndValidity();\r\n  }\r\n\r\n  SubmitImage() {\r\n    debugger;\r\n    if (this.form.value.avatar != null) {\r\n      var apipath = \"UploadImageCategory\";\r\n\r\n      this.uploadfileservice\r\n        .uploadbrandimage(this.form.value.avatar, apipath, this.categotyid)\r\n        .subscribe((event: HttpEvent<any>) => {\r\n          switch (event.type) {\r\n            case HttpEventType.Sent:\r\n              console.log(\"Request has been made!\");\r\n              break;\r\n            case HttpEventType.ResponseHeader:\r\n              console.log(\"Response header has been received!\");\r\n\r\n              this.form.reset();\r\n              this.modalService.dismissAll();\r\n              break;\r\n            case HttpEventType.UploadProgress:\r\n              this.progress = Math.round((event.loaded / event.total) * 100);\r\n              console.log(`Uploaded! ${this.progress}%`);\r\n              break;\r\n            case HttpEventType.Response:\r\n              console.log(\"User successfully created!\", event.body);\r\n              setTimeout(() => {\r\n                this.progress = 0;\r\n              }, 1500);\r\n          }\r\n          this.Getcategorey();\r\n        });\r\n    }\r\n  }\r\n  submit() {\r\n    debugger\r\n    let id = this.CategoryForm.get(\"id\").value;\r\n    if (id == null || id == \"\") {\r\n      this.AddCategory();\r\n    } else {\r\n      this.UpdateCategory();\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.scss']\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CategoriesComponent } from './categories.component';\r\nimport { AllcategoriesComponent } from './Allcategories/Allcategories.component';\r\nimport { categoriesRoutingmodule } from './categoryrouting.routing';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { SharedModule } from '../../../../src/app/shared/shared.module';\r\nimport { Ng2OrderModule } from 'ng2-order-pipe';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\r\nimport { Category } from '../../../../src/app/Models/Category';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    categoriesRoutingmodule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxDropzoneModule,\r\n    Ng2OrderModule,\r\n    NgxSpinnerModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule\r\n  ],\r\n  declarations: [CategoriesComponent,AllcategoriesComponent],\r\n  providers: [\r\n    NgxSpinnerService,Category\r\n    ]\r\n})\r\nexport class CategoriesModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllcategoriesComponent } from './Allcategories/Allcategories.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AllcategoriesComponent,\r\n    data: {\r\n      breadcrumb: ' Categories',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: 'All categories',\r\n      status: true\r\n    }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class categoriesRoutingmodule { }\r\n"],"sourceRoot":"webpack:///"}