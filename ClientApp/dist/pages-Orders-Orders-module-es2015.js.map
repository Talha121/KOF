{"version":3,"sources":["./src/app/pages/Orders/AllOrders/AllOrders.component.html","./src/app/pages/Orders/OrderStatus/OrderStatus.component.html","./src/app/pages/Orders/Orders.component.html","./src/app/pages/Orders/PosOrder/PosOrder.component.html","./src/app/_service/order.service.ts","./src/app/pages/Orders/AllOrders/AllOrders.component.scss","./src/app/pages/Orders/AllOrders/AllOrders.component.ts","./src/app/pages/Orders/OrderRouting.routing.ts","./src/app/pages/Orders/OrderStatus/OrderStatus.component.scss","./src/app/pages/Orders/OrderStatus/OrderStatus.component.ts","./src/app/pages/Orders/Orders.component.scss","./src/app/pages/Orders/Orders.component.ts","./src/app/pages/Orders/Orders.module.ts","./src/app/pages/Orders/PosOrder/PosOrder.component.scss","./src/app/pages/Orders/PosOrder/PosOrder.component.ts"],"names":[],"mappings":"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","file":"pages-Orders-Orders-module-es2015.js","sourcesContent":["export default \"\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n<!-- Hover table card start -->\\r\\n<app-card [title]=\\\"'Orders'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\r\\n  <span class=\\\"code-header\\\">All Orders Detail</span>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\" >\\r\\n     \\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\" >\\r\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;padding-bottom: 8px;\\\">\\r\\n        <select class=\\\"custom-select\\\"#mySelect\\r\\n        (change)='onOptionsSelected(mySelect.value)' >\\r\\n          <option selected value=\\\"0\\\">All</option>\\r\\n         <option value=\\\"1\\\">Pending</option>\\r\\n         <option value=\\\"2\\\">Active</option>\\r\\n         <option value=\\\"3\\\">Completed</option>\\r\\n         <option value=\\\"4\\\">Cancelled</option>\\r\\n    \\r\\n        </select>\\r\\n        </div>\\r\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vendorname\\\" (ngModelChange)=\\\"SearchRider()\\\" placeholder=\\\"Enter Name to search\\\" >\\r\\n           \\r\\n         \\r\\n     </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('code')\\\">Order No.<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('storename')\\\">Vendor<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('createDate')\\\">Date<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('status')\\\">Status<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('delivertDate')\\\">Delivering Date<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('billinginfo.subtotal')\\\">Sub Total<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('billinginfo.discounted_Amount')\\\">Discount<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n\\r\\n      <th (click)=\\\"Sort('billinginfo.grandTotal')\\\">Grand Total<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n      <th (click)=\\\"Sort('Action')\\\">Action<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n      <!-- <th>Image</th> -->\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let obj of SearchOrdersList | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\r\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\r\\n        <td>{{obj.code}}</td>\\r\\n        <td>{{obj.storename}}</td>\\r\\n        <td>{{obj.createDate| date:'medium'}}</td>\\r\\n        <td>{{obj.status}}</td>\\r\\n      \\r\\n        <td>{{obj.delivertDate | date:'medium'}}</td>\\r\\n        <td>{{obj.billinginfo?.subtotal}}</td>\\r\\n        <td>{{obj.billinginfo?.discounted_Amount}}</td>\\r\\n        <td>{{obj.billinginfo?.grandTotal}}</td>\\r\\n    \\r\\n       <td>  <div class=\\\"row\\\">\\r\\n\\r\\n        <div style=\\\"padding: 4px;\\\">\\r\\n          <i class=\\\"fa fa-desktop\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\"  (click)=\\\"openOrderDetailLg(OrderDetailcontent,obj.orderId)\\\" ></i> \\r\\n        </div>\\r\\n        <div style=\\\"padding: 4px;\\\"*ngIf=\\\"obj.status!='Completed'\\\">\\r\\n          <i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(113, 147, 240)\\\"  (click)=\\\"openOrderUpdateLg(EditStatuscontent,obj.orderId)\\\" ></i> \\r\\n        </div>\\r\\n    </div></td>\\r\\n      </tr>\\r\\n     \\r\\n      </tbody>\\r\\n    \\r\\n    </table>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div style=\\\"right: 10%;\\\">\\r\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</app-card>\\r\\n<!-- Hover table card end -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #OrderDetailcontent let-modal>\\r\\n      \\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Order Detail</h4>\\r\\n      \\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n           <tr>\\r\\n             <th>Product Name</th>\\r\\n             <th>Barcode</th>\\r\\n             <th>Qty</th>\\r\\n             <th>Unit Price</th>\\r\\n             <th>Total price</th>\\r\\n           </tr>\\r\\n      </thead>\\r\\n      <tbody *ngFor=\\\"let obj of orderitemns\\\">\\r\\n        <tr>\\r\\n          <th>{{obj?.productName}}</th>\\r\\n          <th>{{obj?.barcode}}</th>\\r\\n          <th>{{obj?.qty}}</th>\\r\\n          <th>{{obj?.price}}</th>\\r\\n          <th>{{obj?.totalprice}}</th>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n           </div>\\r\\n    \\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n  \\r\\n  \\r\\n    <ng-template #EditStatuscontent let-modal>\\r\\n      \\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Order Detail</h4>\\r\\n      \\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <div class=\\\"container\\\">\\r\\n          <form [formGroup]=\\\"orderstatus\\\" >\\r\\n      <input type=\\\"hidden\\\" formControlName=\\\"orderId\\\"/>\\r\\n            <label>Select Status</label>\\r\\n            <select class=\\\"custom-select custom-select-lg sm-1\\\"formControlName=\\\"status\\\"\\r\\n            (change)='onOptionsOrderStatusSelected()'>\\r\\n             \\r\\n              <!-- <option value=\\\"Pending\\\" *ngIf=\\\"ordercurrentstatus==''\\\">Pending</option> -->\\r\\n              <option value=\\\"Active\\\"*ngIf=\\\"ordercurrentstatus=='Pending'\\\" >Active</option>\\r\\n              <option value=\\\"Completed\\\"*ngIf=\\\"ordercurrentstatus=='Active'\\\">Completed</option>\\r\\n              \\r\\n  \\r\\n            </select>\\r\\n      \\r\\n             \\r\\n          </form>\\r\\n      </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\r\\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\r\\n      </ngx-spinner> \\r\\n  \\r\\n  \\r\\n\"","export default \"<p>\\r\\n  OrderStatus works!\\r\\n</p>\\r\\n\"","export default \"<p>\\r\\n  Orders works!\\r\\n</p>\\r\\n\"","export default \"\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n<!-- Hover table card start -->\\r\\n<app-card [title]=\\\"'Orders'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\r\\n  <span class=\\\"code-header\\\">All POS Orders Detail </span>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\" >\\r\\n     \\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\" >\\r\\n      \\r\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ordercode\\\" (ngModelChange)=\\\"SearchRider()\\\" placeholder=\\\"Enter Order No. to search\\\" >\\r\\n           \\r\\n         \\r\\n     </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('orderId')\\\">Order No.<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n    \\r\\n        <th (click)=\\\"Sort('billinginfo.percentageDiscount')\\\">Date<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('billinginfo.subtotal')\\\">Sub Total<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n        <th (click)=\\\"Sort('billinginfo.subtotal')\\\">Discount<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n\\r\\n      <th (click)=\\\"Sort('billinginfo.grandTotal')\\\">Grand Total<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n      <th (click)=\\\"Sort('Action')\\\">Action<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n      <!-- <th>Image</th> -->\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let obj of SearchOrdersList | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\r\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\r\\n        <td>{{obj.ordercode}}</td>\\r\\n     \\r\\n        <td>{{obj.date}}</td>\\r\\n       \\r\\n      \\r\\n     \\r\\n        <td>{{obj.billinginfo?.subtotal}}</td>\\r\\n        <td>{{obj.billinginfo?.discounted_Amount}}</td>\\r\\n        <td>{{obj.billinginfo?.grandTotal}}</td>\\r\\n    \\r\\n       <td>  <div class=\\\"row\\\">\\r\\n\\r\\n        <div style=\\\"padding: 4px;\\\">\\r\\n          <i class=\\\"fa fa-desktop\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\"  (click)=\\\"openOrderDetailLg(OrderDetailcontent,obj.orderId)\\\" ></i> \\r\\n        </div>\\r\\n        <!-- <div style=\\\"padding: 4px;\\\">\\r\\n          <i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(113, 147, 240)\\\"  (click)=\\\"openOrderUpdateLg(EditStatuscontent,obj.orderId)\\\" ></i> \\r\\n        </div> -->\\r\\n    </div></td>\\r\\n      </tr>\\r\\n     \\r\\n      </tbody>\\r\\n    \\r\\n    </table>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div style=\\\"right: 10%;\\\">\\r\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</app-card>\\r\\n<!-- Hover table card end -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #OrderDetailcontent let-modal>\\r\\n      \\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Order Detail</h4>\\r\\n      \\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n           <tr>\\r\\n             <th>Product Name</th>\\r\\n             <th>Barcode</th>\\r\\n             <th>Qty</th>\\r\\n             <th>Unit Price</th>\\r\\n             <th>Total price</th>\\r\\n           </tr>\\r\\n      </thead>\\r\\n      <tbody *ngFor=\\\"let obj of orderitemns\\\">\\r\\n        <tr>\\r\\n          <th>{{obj?.productName}}</th>\\r\\n          <th>{{obj?.barcode}}</th>\\r\\n          <th>{{obj?.qty}}</th>\\r\\n          <th>{{obj?.price}}</th>\\r\\n          <th>{{obj?.totalprice}}</th>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n           </div>\\r\\n    \\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\r\\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\r\\n      </ngx-spinner> \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n\"","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class OrderService {\r\n  \r\n  baseUrl = environment.apiurl + 'OrderApi/';\r\n  baseUrl2 = environment.apiurl + 'PosOrder/';\r\nconstructor(private http: HttpClient) { }\r\nGetOrders(){\r\n  return this.http.get<any>(this.baseUrl+'GetAllOrders',httpOptions)\r\n};\r\nGetPosOrders(){\r\n  return this.http.get<any>(this.baseUrl2+'GetPosOrders',httpOptions)\r\n};\r\nUpdateOrderStatus(form:any){\r\n  return this.http.post<any>(this.baseUrl+'OrderStatus',form)\r\n};\r\n};\r\nvar headers_object = new HttpHeaders({\r\n  'Content-Type': 'application/json',\r\n   'Authorization': \"Bearer \"+localStorage.getItem('token')\r\n});\r\nconst httpOptions = {\r\n  headers: headers_object\r\n};","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9BbGxPcmRlcnMvQWxsT3JkZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { OrderDto } from './../../../../../src/app/Models/OrderDto.Model';\r\nimport { OrderService } from '../../../../../src/app/_service/order.service';\r\nimport { items } from './../../../../../src/app/Models/items.Model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-AllOrders',\r\n  templateUrl: './AllOrders.component.html',\r\n  styleUrls: ['./AllOrders.component.scss']\r\n})\r\nexport class AllOrdersComponent implements OnInit {\r\n  OrdersList:OrderDto[];\r\n  SearchOrdersList:OrderDto[];\r\n  key:string='rowid';\r\n  reverse:boolean=false;\r\n  p:number=1;\r\n  form: FormGroup;\r\n  orderid:number;\r\n  orderitemns:items[];\r\n  neworderdata:any;\r\n  vendorname:string;\r\n  statusorderid:number;\r\n  status:string;\r\n  ordercurrentstatus:string;\r\n  ss:boolean=false;\r\n  orderstatus:FormGroup=new FormGroup({\r\n    orderId:new FormControl(''),\r\n    status: new FormControl('')\r\n  \r\n   });\r\n  constructor(private SpinnerService: NgxSpinnerService,private orderservice:OrderService,private modalService: NgbModal,) { }\r\n\r\n  ngOnInit() {\r\n   \r\n    this.GetOrders();\r\n \r\n  \r\n  }\r\n  openOrderDetailLg(content,id:number) {\r\n    \r\n    var data=this.OrdersList.find(res=>res.orderId==id);\r\n    this.orderitemns=data.items;\r\n    \r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n  openOrderUpdateLg(content,id:number) {\r\n    \r\n   this.statusorderid=id;\r\n    var dd=this.SearchOrdersList.filter(x=>x.orderId==id);\r\n    this.ordercurrentstatus=dd[0].status;\r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n  onOptionsOrderStatusSelected(){\r\n\r\n    ((this.orderstatus.get('orderId').patchValue(this.statusorderid)));\r\n    this.orderservice.UpdateOrderStatus(this.orderstatus.value).subscribe((next:any) => {\r\n     this.OrdersList.forEach(x=>{if(x.orderId==this.statusorderid){x.status=this.orderstatus.value.status}})\r\n      this.modalService.dismissAll();\r\n      this.orderstatus.reset();\r\n\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n    \r\n  }\r\n  onOptionsSelected(num){\r\n    \r\n    if(num==\"0\"){\r\n      this.SearchOrdersList=this.OrdersList;\r\n    }\r\n    if(num==\"1\"){\r\n      this.status=\"Pending\";\r\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\r\n    }\r\n    if(num==\"2\"){\r\n      this.status=\"Active\";\r\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\r\n    }\r\n    if(num==\"3\"){\r\n      this.status=\"Completed\";\r\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\r\n    }\r\n    if(num==\"4\"){\r\n      this.status=\"Cancelled\";\r\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\r\n    }\r\n\r\n  }\r\n  SearchRider(){\r\n    if(this.vendorname==\"\"){\r\n      this.SearchOrdersList=this.OrdersList\r\n     }\r\n     else{\r\n       if(this.OrdersList!=null){\r\n         this.SearchOrdersList=this.OrdersList.filter(res=>{\r\n           return res.vendorname.match(this.vendorname)\r\n         })\r\n       }\r\n    \r\n     }\r\n  }\r\n  GetOrders(){\r\n    this.SpinnerService.show();\r\n    this.orderservice.GetOrders().subscribe((next:any) => {\r\n      this.OrdersList=[];\r\n      this.OrdersList=next.res;console.log(next.res);\r\n      this.SearchOrdersList=this.OrdersList;\r\n      this.SpinnerService.hide();\r\n      console.log(this.OrdersList)\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n \r\n  }\r\n\r\n  Sort(key){\r\n    this.key=key;\r\n    this.reverse=!this.reverse;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllOrdersComponent } from './AllOrders/AllOrders.component';\r\nimport { PosOrderComponent } from './PosOrder/PosOrder.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AllOrdersComponent,\r\n    data: {\r\n      breadcrumb: ' Orders',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: 'All Orders',\r\n      status: true\r\n    }\r\n  },\r\n  {\r\n    path: 'posorders',\r\n    component: PosOrderComponent,\r\n    data: {\r\n      breadcrumb: 'Pos Orders',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: 'All Pos Orders Detail',\r\n      status: true\r\n    }\r\n  },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrderRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9PcmRlclN0YXR1cy9PcmRlclN0YXR1cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-OrderStatus',\r\n  templateUrl: './OrderStatus.component.html',\r\n  styleUrls: ['./OrderStatus.component.scss']\r\n})\r\nexport class OrderStatusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9PcmRlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-Orders',\r\n  templateUrl: './Orders.component.html',\r\n  styleUrls: ['./Orders.component.scss']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OrdersComponent } from './Orders.component';\r\nimport { AllOrdersComponent } from './AllOrders/AllOrders.component';\r\nimport { OrderStatusComponent } from './OrderStatus/OrderStatus.component';\r\nimport { OrderRoutingModule } from './OrderRouting.routing';\r\nimport { SharedModule } from '../../../../src/app/shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { PosOrderComponent } from './PosOrder/PosOrder.component';\r\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OrderRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxDropzoneModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [OrdersComponent,AllOrdersComponent,OrderStatusComponent,PosOrderComponent],\r\n  providers: [\r\n    NgxSpinnerService\r\n    ]\r\n})\r\nexport class OrdersModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9Qb3NPcmRlci9Qb3NPcmRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { OrderDto } from '../../../Models/OrderDto.Model';\r\nimport { OrderService } from '../../../_service/order.service';\r\nimport { items } from '../../../Models/items.Model';\r\nimport { PosServiceService } from '../../../_service/PosService.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n@Component({\r\n  selector: 'app-PosOrder',\r\n  templateUrl: './PosOrder.component.html',\r\n  styleUrls: ['./PosOrder.component.scss']\r\n})\r\nexport class PosOrderComponent implements OnInit {\r\n\r\n  OrdersList:OrderDto[];\r\n  SearchOrdersList:OrderDto[];\r\n  key:string='rowid';\r\n  reverse:boolean=false;\r\n  p:number=1;\r\n  form: FormGroup;\r\n  orderid:number;\r\n  orderitemns:items[];\r\n  neworderdata:any;\r\n  ordercode:string;\r\n  statusorderid:number;\r\n  status:string;\r\n  ss:boolean=false;\r\n \r\n  constructor(private SpinnerService: NgxSpinnerService,private orderservice:PosServiceService,private modalService: NgbModal,private posorderservice:OrderService) { }\r\n\r\n  ngOnInit() {\r\n    this.GetOrders();\r\n  \r\n  }\r\n  openOrderDetailLg(content,id:number) {\r\n    \r\n    var data=this.OrdersList.find(res=>res.orderId==id);\r\n    this.orderitemns=data.items;\r\n    \r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n  openOrderUpdateLg(content,id:number) {\r\n    \r\n   this.statusorderid=id;\r\n    \r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n \r\n \r\n  SearchRider(){\r\n    \r\n    if(this.ordercode==\"\"){\r\n      this.SearchOrdersList=this.OrdersList\r\n     }\r\n     else{\r\n       if(this.OrdersList!=null){\r\n         this.SearchOrdersList=this.OrdersList.filter(res=>{\r\n           return res.ordercode.toLocaleLowerCase().match(this.ordercode.toLocaleLowerCase())\r\n         })\r\n       }\r\n    \r\n     }\r\n  }\r\n  GetOrders(){\r\n    this.SpinnerService.show();\r\n    this.posorderservice.GetPosOrders().subscribe((next:any) => {\r\n      this.OrdersList=[];\r\n      this.OrdersList=next.res;\r\n      this.SpinnerService.hide();\r\n      this.SearchOrdersList=this.OrdersList;\r\n    \r\n      console.log(this.OrdersList)\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  Sort(key){\r\n    this.key=key;\r\n    this.reverse=!this.reverse;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}