{"version":3,"sources":["src/app/pages/categories/Allcategories/Allcategories.component.html","src/app/pages/categories/categories.component.html","src/app/Models/Category.ts","src/app/pages/categories/Allcategories/Allcategories.component.scss","src/app/pages/categories/Allcategories/Allcategories.component.ts","src/app/pages/categories/categories.component.scss","src/app/pages/categories/categories.component.ts","src/app/pages/categories/categories.module.ts","src/app/pages/categories/categoryrouting.routing.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <!-- Hover table card start -->\\r\\n    <app-card\\r\\n      [title]=\\\"'Categories'\\\"\\r\\n      [classHeader]=\\\"true\\\"\\r\\n      [blockClass]=\\\"'table-border-style'\\\"\\r\\n    >\\r\\n      <span class=\\\"code-header\\\">All Categories Detail</span>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"!showform\\\">\\r\\n        <div class=\\\"col-sm-10\\\">\\r\\n          <button\\r\\n            class=\\\"btn btn-success pull-right\\\"\\r\\n            (click)=\\\"createCategory(categoryModal)\\\"\\r\\n          >\\r\\n            Add Category\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      <div class=\\\"table-responsive\\\" style=\\\"padding: 2%\\\">\\r\\n        <table class=\\\"table table-hover\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\r\\n              <th (click)=\\\"Sort('name')\\\">\\r\\n                Category Name<i class=\\\"fa fa-sort\\\"></i>\\r\\n              </th>\\r\\n              <th (click)=\\\"Sort('status')\\\">\\r\\n                Status<i class=\\\"fa fa-sort\\\"></i>\\r\\n              </th>\\r\\n              \\r\\n              <th (click)=\\\"Sort('id')\\\">\\r\\n                Image<i class=\\\"fa fa-sort\\\"></i>\\r\\n              </th>\\r\\n              <th (click)=\\\"Sort('description')\\\">\\r\\n                Actions<i class=\\\"fa fa-sort\\\"></i>\\r\\n              </th>\\r\\n              <!-- <th>Image</th> -->\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr\\r\\n              *ngFor=\\\"\\r\\n                let obj of CategoriesList\\r\\n                  | orderBy: key:reverse\\r\\n                  | paginate: { itemsPerPage: 10, currentPage: p };\\r\\n                let i = index\\r\\n              \\\"\\r\\n            >\\r\\n              <td style=\\\"width: 2px\\\">{{ i + 1 }}</td>\\r\\n              <td>{{ obj.name }}</td>\\r\\n              <td>{{ obj.status }}</td>\\r\\n              <td *ngIf=\\\"obj.imageUrl != noimage; else nImage\\\">\\r\\n                <img\\r\\n                  [src]=\\\"ImagebaseUrl+obj.imageUrl\\\"\\r\\n                  style=\\\"height: 40px\\\"\\r\\n                />\\r\\n              </td>\\r\\n              <ng-template #nImage>\\r\\n                <td>No Image</td>\\r\\n              </ng-template>\\r\\n              <td>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <!-- <div style=\\\"padding: 4px\\\">\\r\\n                    <i\\r\\n                      class=\\\"fa fa-upload\\\"\\r\\n                      aria-hidden=\\\"true\\\"\\r\\n                      style=\\\"font-size: 18px; color: rgb(255, 0, 0)\\\"\\r\\n                      title=\\\"Upload Image\\\"\\r\\n                      (click)=\\\"openLg(uploadfilecontent, obj.category_Id)\\\"\\r\\n                    ></i>\\r\\n                  </div> -->\\r\\n                  <div style=\\\"padding: 4px\\\">\\r\\n                    <i\\r\\n                      class=\\\"fa fa-edit\\\"\\r\\n                      style=\\\"font-size: 18px; color: rgb(0, 195, 255)\\\"\\r\\n                      (click)=\\\"UpdateView(categoryModal, obj.id)\\\"\\r\\n                    ></i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div style=\\\"right: 10%\\\">\\r\\n            <pagination-controls\\r\\n              (pageChange)=\\\"p = $event\\\"\\r\\n            ></pagination-controls>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </app-card>\\r\\n    <!-- Hover table card end -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ngx-spinner\\r\\n  bdColor=\\\"rgba(51, 51, 51, 0.8)\\\"\\r\\n  size=\\\"default\\\"\\r\\n  type=\\\"ball-spin-clockwise\\\"\\r\\n>\\r\\n  <p style=\\\"color: white\\\">Please Wait.</p>\\r\\n</ngx-spinner>\\r\\n\\r\\n<ng-template #categoryModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{ modalContent }} Category</h4>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"CategoryForm\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"col-md-5 mb-3\\\">\\r\\n          <label for=\\\"validationCustom01\\\">Category Name</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"validationCustom01\\\"\\r\\n            placeholder=\\\"Category Name\\\"\\r\\n            formControlName=\\\"name\\\"\\r\\n            required\\r\\n          />\\r\\n        </div>\\r\\n        <div class=\\\"col-md-5 mb-3\\\">\\r\\n          <label for=\\\"validationCustom01\\\">Category Image</label>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"file\\\"  (change)=\\\"uploadFile($event)\\\" required />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button\\r\\n    style=\\\"float: right\\\"\\r\\n    class=\\\"btn btn-primary\\\"\\r\\n    (click)=\\\"submit()\\\"\\r\\n    type=\\\"submit\\\"\\r\\n  >\\r\\n    Submit\\r\\n  </button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-light\\\"\\r\\n      (click)=\\\"modal.close('Close click')\\\"\\r\\n    >\\r\\n      Close\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","export default \"<p>\\r\\n  categories works!\\r\\n</p>\\r\\n\"","export class Category {\r\n  id: number;\r\n  imageUrl: string;\r\n  name: string;\r\n  status: boolean;\r\n  createdBy:string;\r\n  createdOn:Date\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhdGVnb3JpZXMvQWxsY2F0ZWdvcmllcy9BbGxjYXRlZ29yaWVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { HttpEvent, HttpEventType } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormControl, FormGroup } from \"@angular/forms\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { environment } from \"./../../../../../src/environments/environment.prod\";\r\nimport { FileuploadService } from \"../../../../../src/app/_service/fileupload.service\";\r\nimport { ProductService } from \"../../../../../src/app/_service/product.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Category } from \"../../../../../src/app/Models/Category\";\r\nimport { AlertifyService } from \"../../../../../src/app/_service/alertify.service\";\r\n\r\n@Component({\r\n  selector: \"app-Allcategories\",\r\n  templateUrl: \"./Allcategories.component.html\",\r\n  styleUrls: [\"./Allcategories.component.scss\"],\r\n})\r\nexport class AllcategoriesComponent implements OnInit {\r\n  form: FormGroup;\r\n  ImagebaseUrl = environment.Imagebaseurl + \"Images/CategoryImages/\";\r\n  CategoriesList: any;\r\n  key: string = \"rowid\";\r\n  reverse: boolean = false;\r\n  p: number = 1;\r\n  categotyid: number;\r\n  noimage = \"\";\r\n  showform: boolean = false;\r\n  Singlecategory: Category;\r\n  progress: number = 0;\r\n  modalContent: string = \"\";\r\n  constructor(\r\n    private categorymodel: Category,\r\n    private alertify: AlertifyService,\r\n    private SpinnerService: NgxSpinnerService,\r\n    private productservice: ProductService,\r\n    private modalService: NgbModal,\r\n    private uploadfileservice: FileuploadService,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.SpinnerService.show();\r\n    this.Getcategorey();\r\n    this.form = this.fb.group({\r\n      avatar: [null],\r\n    });\r\n    this.SpinnerService.hide();\r\n  }\r\n  showinput() {\r\n    this.showform = true;\r\n  }\r\n  CategoryForm: FormGroup = new FormGroup({\r\n    name: new FormControl(this.categorymodel.name),\r\n    id: new FormControl(),\r\n    status: new FormControl(true),\r\n    image: new FormControl(null),\r\n  });\r\n  AddCategory() {\r\n    \r\n    let data= this.CategoryForm.value;\r\n    var formData: any = new FormData();\r\n    formData.append(\"Name\", data.name);\r\n    formData.append(\"image\", data.image);\r\n    this.productservice.Addcateogry(formData).subscribe(\r\n      (next) => {\r\n        this.modalService.dismissAll();\r\n        this.CategoryForm.reset();\r\n        this.Getcategorey();\r\n        this.alertify.success(\"Category Created successfully\");\r\n      },\r\n      (error) => {\r\n        this.alertify.error(\"already exists\");\r\n        console.log(error);\r\n      }\r\n    );\r\n    console.log(this.CategoryForm.value);\r\n  }\r\n  UpdateCategory() {\r\n    \r\n    let data= this.CategoryForm.value;\r\n    var formData: any = new FormData();\r\n    formData.append(\"Id\",data.id);\r\n    formData.append(\"Name\", data.name);\r\n    formData.append(\"image\", data.image);\r\n    this.productservice.UpdateCategory(formData).subscribe(\r\n      (next) => {\r\n        this.modalService.dismissAll();\r\n        this.CategoryForm.reset();\r\n        this.Getcategorey();\r\n        this.alertify.success(\"Category Updated seccussfully\");\r\n      },\r\n      (error) => {\r\n        this.modalService.dismissAll();\r\n        this.CategoryForm.reset();\r\n        this.alertify.success(\"Category Updated seccussfully\");\r\n        console.log(error);\r\n      }\r\n    );\r\n    console.log(this.CategoryForm.value);\r\n  }\r\n\r\n  Getcategorey() {\r\n    this.SpinnerService.show();\r\n    this.productservice.GetCategorey().subscribe(\r\n      (response: any) => {\r\n        \r\n        this.CategoriesList = [];\r\n        this.CategoriesList = response;\r\n\r\n        console.log(this.CategoriesList);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    this.SpinnerService.hide();\r\n  }\r\n  Sort(key) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  openLg(content, id: number) {\r\n    this.categotyid = id;\r\n\r\n    this.modalService.open(content, { size: \"lg\" });\r\n  }\r\n\r\n  UpdateView(content, id: number) {\r\n    debugger\r\n    this.modalContent = \"Update\";\r\n    var data = this.CategoriesList.find((res) => res.id == id);\r\n    \r\n    this.Singlecategory = data;\r\n    this.CategoryForm.patchValue({\r\n      id: this.Singlecategory.id,\r\n      name: this.Singlecategory.name,\r\n      status: this.Singlecategory.status,\r\n    });\r\n\r\n    this.modalService.open(content, { size: \"lg\" });\r\n  }\r\n  createCategory(content) {\r\n    this.modalContent = \"Create\";\r\n    this.CategoryForm.reset();\r\n    this.modalService.open(content, { size: \"lg\" });\r\n  }\r\n  uploadFile(event) {\r\n    \r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.CategoryForm.get(\"image\").patchValue(file);\r\n    this.CategoryForm.get(\"image\").updateValueAndValidity();\r\n  }\r\n\r\n  SubmitImage() {\r\n    \r\n    if (this.form.value.avatar != null) {\r\n      var apipath = \"UploadImageCategory\";\r\n\r\n      this.uploadfileservice\r\n        .uploadbrandimage(this.form.value.avatar, apipath, this.categotyid)\r\n        .subscribe((event: HttpEvent<any>) => {\r\n          switch (event.type) {\r\n            case HttpEventType.Sent:\r\n              console.log(\"Request has been made!\");\r\n              break;\r\n            case HttpEventType.ResponseHeader:\r\n              console.log(\"Response header has been received!\");\r\n\r\n              this.form.reset();\r\n              this.modalService.dismissAll();\r\n              break;\r\n            case HttpEventType.UploadProgress:\r\n              this.progress = Math.round((event.loaded / event.total) * 100);\r\n              console.log(`Uploaded! ${this.progress}%`);\r\n              break;\r\n            case HttpEventType.Response:\r\n              console.log(\"User successfully created!\", event.body);\r\n              setTimeout(() => {\r\n                this.progress = 0;\r\n              }, 1500);\r\n          }\r\n          this.Getcategorey();\r\n        });\r\n    }\r\n  }\r\n  submit() {\r\n    debugger\r\n    let id = this.CategoryForm.get(\"id\").value;\r\n    if (id == null || id == \"\") {\r\n      this.AddCategory();\r\n    } else {\r\n      this.UpdateCategory();\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.scss']\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CategoriesComponent } from './categories.component';\r\nimport { AllcategoriesComponent } from './Allcategories/Allcategories.component';\r\nimport { categoriesRoutingmodule } from './categoryrouting.routing';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { SharedModule } from '../../../../src/app/shared/shared.module';\r\nimport { Ng2OrderModule } from 'ng2-order-pipe';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\r\nimport { Category } from '../../../../src/app/Models/Category';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    categoriesRoutingmodule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxDropzoneModule,\r\n    Ng2OrderModule,\r\n    NgxSpinnerModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule\r\n  ],\r\n  declarations: [CategoriesComponent,AllcategoriesComponent],\r\n  providers: [\r\n    NgxSpinnerService,Category\r\n    ]\r\n})\r\nexport class CategoriesModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllcategoriesComponent } from './Allcategories/Allcategories.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AllcategoriesComponent,\r\n    data: {\r\n      breadcrumb: ' Categories',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: 'All categories',\r\n      status: true\r\n    }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class categoriesRoutingmodule { }\r\n"],"sourceRoot":"webpack:///","file":"pages-categories-categories-module-es5.js"}